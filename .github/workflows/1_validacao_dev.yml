name: DEV

on:
  push:
    branches:
      - 'feature/*'
      - 'bugfix/*'
      - 'workflow/*'
  pull_request:
    branches:
      - 'develop'
      - 'main'

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checando o código
      uses: actions/checkout@v3

    
    - name: Verificando tipo de arquivos (exemplo para .ipynb)
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '\.ipynb$'; then
          echo "Arquivos Jupyter Notebook modificados!"
        else
          echo "Nenhum arquivo Jupyter Notebook modificado!"
        fi

    - name: Validando estilo de código (exemplo para Jupyter Notebook usando flake8)
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '\.ipynb$'; then
          pip install flake8
          flake8 .
        fi

  Valida-nome-branch:
    steps:
    - name: Verifique o evento e extraia o nome da branch corretamente
      run: |
        # Verifique o evento e extraia o nome da branch corretamente
        if [[ "$GITHUB_EVENT_NAME" == "push" ]]; then
          BRANCH_NAME="${GITHUB_REF##*/}"  # Para push, extrai a branch diretamente
        elif [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
          BRANCH_NAME="${GITHUB_HEAD_REF}"  # Para PR, usa GITHUB_HEAD_REF
        else
          echo "Erro: Evento não suportado"
          exit 1
        fi
        
        echo "BRANCH_NAME: $BRANCH_NAME"  # Exibe o nome da branch para depuração
        
        # Verifica se a branch segue os padrões permitidos (feature/*, bugfix/*, workflow/*)
        if [[ "$BRANCH_NAME" =~ ^feature/.* || "$BRANCH_NAME" =~ ^bugfix/.* || "$BRANCH_NAME" =~ ^workflow/.* ]]; then
          echo "A branch $BRANCH_NAME é uma branch válida."
        else
          echo "Erro: A branch não segue um padrão permitido (feature/*, bugfix/*, workflow/*)."
          exit 1
        fi
      shell: bash

  # validate-and-create-prs:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checar o código
  #     uses: actions/checkout@v3

  #   - name: Verificar variáveis de evento
  #     run: |
  #       echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
  #       echo "GITHUB_REF: $GITHUB_REF"
  #       echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"

  #   - name: Validar nome da branch
  #     run: |
  #       # Verifique o evento e extraia o nome da branch corretamente
  #       if [[ "$GITHUB_EVENT_NAME" == "push" ]]; then
  #         BRANCH_NAME="${GITHUB_REF##*/}"  # Para push, extrai a branch diretamente
  #       elif [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
  #         BRANCH_NAME="${GITHUB_HEAD_REF}"  # Para PR, usa GITHUB_HEAD_REF
  #       else
  #         echo "Erro: Evento não suportado"
  #         exit 1
  #       fi

  #       echo "BRANCH_NAME: $BRANCH_NAME"  # Exibe o nome da branch para depuração

  #       # Verifica se a branch segue os padrões permitidos (feature/*, bugfix/*, workflow/*)
  #       if [[ "$BRANCH_NAME" =~ ^feature/ || "$BRANCH_NAME" =~ ^bugfix/ || "$BRANCH_NAME" =~ ^workflow/ ]]; then
  #         echo "A branch $BRANCH_NAME é uma branch válida."
  #       else
  #         echo "Erro: A branch não segue um padrão permitido (feature/*, bugfix/*, workflow/*)."
  #         exit 1
  #       fi

  #   - name: Criar PR para a branch develop
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     run: |
  #       echo "Criando PR da branch $BRANCH_NAME para develop..."
  #       curl -X POST \
  #       -H "Authorization: token $GITHUB_TOKEN" \
  #       -d '{"title":"Automated PR from branch to develop","head":"'$BRANCH_NAME'","base":"develop"}' \
  #       https://api.github.com/repos/${{ github.repository }}/pulls

  #   - name: Criar PR para a branch main
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     run: |
  #       echo "Criando PR da branch $BRANCH_NAME para main..."
  #       curl -X POST \
  #       -H "Authorization: token $GITHUB_TOKEN" \
  #       -d '{"title":"Automated PR from branch to main","head":"'$BRANCH_NAME'","base":"main"}' \
  #       https://api.github.com/repos/${{ github.repository }}/pulls